@using HomeManagement.Business.Catalog.ProductCategories;
@using HomeManagement.Business.Common.Interfaces;
@using HomeManagement.Core.Catalog;



@inject NavigationManager NavigationManager
@inject IDispacher Dispacher
@inject IDialogService DialogService
@inject ILocalizationService Localizer

<SeachBarComponent @bind-Value="searchCategory" />

<div class="pt-36 pb-16 px-3 flex flex-col space-y-2 z-0 items-center mx-auto">

    <NewListItemComponent OnClick="()=>OnCategoryClick(null)" />

    @if (FilteredCategoryItems != null)
    {
        @foreach (ProductCategory item in FilteredCategoryItems)
        {
            <ListItemComponent OnClick="() => OnCategoryClick(item)">
                <ItemModel>
                    <h3 class="flex item-center text-sm font-semibold text-gray-900">@item.Description</h3>
                </ItemModel>
            </ListItemComponent>
        }

    }
</div>

@code
{
    private string searchCategory;

    private IEnumerable<ProductCategory> CategoryItems;
    private IEnumerable<ProductCategory> FilteredCategoryItems => string.IsNullOrWhiteSpace(searchCategory) ? CategoryItems : CategoryItems.Where(c => c.Description.Contains(searchCategory, StringComparison.InvariantCultureIgnoreCase));

    protected override async Task OnInitializedAsync()
    {        
        var readProductCategoryResult = await Dispacher.SendQuery(new ProductCategoryListQuery());
        if (readProductCategoryResult.Success)
        {
            CategoryItems = readProductCategoryResult.Content;
        }
        else
        {
            await DialogService.DisplayAlert(Localizer.GetLocalizedString("ErrorReadingCategories"), readProductCategoryResult.ErrorMessage, Localizer.GetLocalizedString("Ok"))
               .ConfigureAwait(false);
            CategoryItems = Enumerable.Empty<ProductCategory>();
        }
    }

    private void OnCategoryClick(ProductCategory selectedCategory)
    {
        if (selectedCategory != null)
        {
            NavigationManager.NavigateTo("productCategory/" + selectedCategory.Id);
        }
        else
        {
            NavigationManager.NavigateTo("productCategory");
        }
    }
}